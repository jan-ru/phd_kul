---
format: pdf
latex-output-dir: output
bibliography: '/Users/admin/Projects/literature/phd_kul/bib/MySelection.bib'
link-citations: true
execute:
  echo: false
---

# Keywords {#appendix-i}

\fontsize{9}{10}\selectfont

```{python}
#| label: tbl-keywords
#| tbl-cap: "Keywords"

import bibtexparser
#from bibtexparser.bparser import BibTexParser
#from bibtexparser.customization import convert_to_unicode
from IPython.display import display, Markdown
from tabulate import tabulate

bibfile = '/Users/admin/Projects/literature/phd_kul/bib/MySelection.bib'


def insert_space_after_comma(keywords):
    keyword_list = keywords.split(',')
    keywords_with_spaces = ', '.join(keyword_list)
    return keywords_with_spaces


def extract_keys_and_keywords(file_path):
    with open(file_path) as bibtex_file:
        bibtex_str = bibtex_file.read()

    bib_database = bibtexparser.loads(bibtex_str)
    data = []

    for entry in bib_database.entries:
        citation_key = "@"+entry['ID']
        keywords = entry.get('keywords', 'No keywords')  # Use 'No keywords' if not present
        formatted_keywords = insert_space_after_comma(keywords)
        data.append([citation_key, formatted_keywords])
        data.append(["", ""])  # Empty line

    return data


data = extract_keys_and_keywords(bibfile)

# Output the table using tabulate
Markdown(tabulate(data, headers=['Citation Key', 'Keywords'], tablefmt="pipe"))

# Markdown(f"***Number of selected bibtex entries temp.***")
# if the above line is unstarred an empty table is shows.
```

The keywords have been added to the bibtex file after consulting the publishers website and/or the web of science service.

\newpage

\fontsize{11}{12}\selectfont

# Literature

